/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ACC_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ACC_out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("ACC_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ACC_out";
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Fib")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Fib[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("Fib[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Fib";
}

SIGNAL("LCG_Ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Loop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("random")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("random[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("random[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "random";
}

SIGNAL("State")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("State[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "State";
}

SIGNAL("State[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "State";
}

SIGNAL("State[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "State";
}

SIGNAL("sum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("target")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("target[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "target";
}

SIGNAL("target[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "target";
}

SIGNAL("target[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "target";
}

SIGNAL("target[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "target";
}

TRANSITION_LIST("ACC_out[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 27.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 84.0;
			LEVEL 0 FOR 378.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 337.0;
		}
	}
}

TRANSITION_LIST("ACC_out[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 54.0;
			LEVEL 0 FOR 895.0;
		}
	}
}

TRANSITION_LIST("ACC_out[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 645.0;
			LEVEL 1 FOR 355.0;
		}
	}
}

TRANSITION_LIST("ACC_out[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 69.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 576.0;
			LEVEL 1 FOR 337.0;
		}
	}
}

TRANSITION_LIST("ACC_out[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("ACC_out[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("ACC_out[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 733.0;
		}
	}
}

TRANSITION_LIST("ACC_out[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 378.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("ACC_out[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 54.0;
			LEVEL 0 FOR 895.0;
		}
	}
}

TRANSITION_LIST("ACC_out[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 733.0;
		}
	}
}

TRANSITION_LIST("ACC_out[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 883.0;
		}
	}
}

TRANSITION_LIST("ACC_out[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 54.0;
			LEVEL 0 FOR 895.0;
		}
	}
}

TRANSITION_LIST("ACC_out[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("ACC_out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 733.0;
		}
	}
}

TRANSITION_LIST("ACC_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 883.0;
		}
	}
}

TRANSITION_LIST("ACC_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 108.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 733.0;
		}
	}
}

TRANSITION_LIST("address[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("address[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("address[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 273.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 721.0;
		}
	}
}

TRANSITION_LIST("address[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 366.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 337.0;
		}
	}
}

TRANSITION_LIST("address[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("address[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 174.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("address[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 606.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 195.0;
			LEVEL 1 FOR 72.0;
			LEVEL 0 FOR 372.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 279.0;
			LEVEL 1 FOR 66.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 174.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 78.0;
			LEVEL 0 FOR 361.0;
		}
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 294.0;
			LEVEL 0 FOR 361.0;
		}
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 162.0;
			LEVEL 1 FOR 66.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 174.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 216.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 355.0;
		}
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("Fib[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("Fib[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("Fib[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("Fib[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("Fib[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 537.001;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 444.999;
		}
	}
}

TRANSITION_LIST("Fib[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 531.001;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 462.999;
		}
	}
}

TRANSITION_LIST("Fib[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 519.001;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 444.999;
		}
	}
}

TRANSITION_LIST("Fib[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 513.001;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 468.999;
		}
	}
}

TRANSITION_LIST("Fib[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 501.001;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 468.999;
		}
	}
}

TRANSITION_LIST("Fib[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 327.001;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 144.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 468.999;
		}
	}
}

TRANSITION_LIST("Fib[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 315.001;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 156.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 462.999;
		}
	}
}

TRANSITION_LIST("Fib[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 309.001;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 444.999;
		}
	}
}

TRANSITION_LIST("Fib[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 243.001;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 144.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 444.999;
		}
	}
}

TRANSITION_LIST("Fib[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 237.001;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 462.999;
		}
	}
}

TRANSITION_LIST("Fib[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 225.001;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 156.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 468.999;
		}
	}
}

TRANSITION_LIST("Fib[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.001;
			LEVEL 1 FOR 222.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 444.999;
		}
	}
}

TRANSITION_LIST("LCG_Ready")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 153.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 294.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("Loop")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 201.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 30.001;
			LEVEL 1 FOR 53.999;
			LEVEL 0 FOR 18.001;
			LEVEL 1 FOR 11.999;
			LEVEL 0 FOR 18.001;
			LEVEL 1 FOR 83.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 66.0;
			LEVEL 0 FOR 18.001;
			LEVEL 1 FOR 65.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 366.999;
		}
	}
}

TRANSITION_LIST("random[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 411.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 126.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("random[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 417.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 138.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 102.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 102.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 132.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("random[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 385.0;
		}
	}
}

TRANSITION_LIST("random[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 102.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 102.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 405.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 385.0;
		}
	}
}

TRANSITION_LIST("random[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 102.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 373.0;
		}
	}
}

TRANSITION_LIST("random[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("random[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 381.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("random[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 381.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 373.0;
		}
	}
}

TRANSITION_LIST("State[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("State[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 5.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 5.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 5.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 53.999;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 11.999;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 161.999;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 5.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 330.999;
		}
	}
}

TRANSITION_LIST("State[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 53.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 11.999;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 83.999;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 72.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 65.999;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.001;
			LEVEL 0 FOR 11.999;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("sum[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 417.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 126.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 435.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 405.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 114.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 399.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 399.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("sum[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 399.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("sum[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 423.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 156.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 373.0;
		}
	}
}

TRANSITION_LIST("sum[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 373.0;
		}
	}
}

TRANSITION_LIST("sum[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 387.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 393.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 114.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 399.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 399.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 132.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 373.0;
		}
	}
}

TRANSITION_LIST("sum[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 381.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 367.0;
		}
	}
}

TRANSITION_LIST("sum[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 381.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 379.0;
		}
	}
}

TRANSITION_LIST("target[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 639.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 325.0;
		}
	}
}

TRANSITION_LIST("target[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("target[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 267.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 174.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 439.0;
		}
	}
}

TRANSITION_LIST("target[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 174.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 325.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ACC_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "address[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Fib";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "Fib[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "LCG_Ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Loop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "random";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "random[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "random[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "State";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "State[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "State[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "State[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "sum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87;
}

DISPLAY_LINE
{
	CHANNEL = "sum[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "sum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "target";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
	CHILDREN = 89, 90, 91, 92;
}

DISPLAY_LINE
{
	CHANNEL = "target[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "target[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "target[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "target[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 88;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
